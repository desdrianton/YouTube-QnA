Halo prosquad kali ini kita akan belajar tentang expect dan matchers yang berada pada webdriver io ya sebelumnya kita udah belajar tentang selector udah belajar juga tentang method pada elemen Nah sekarang kita akan belajar tentang assertion atau kalau di wdio namanya matchers ya yang tersedia pada webdriver e io seperti itu Nah di sini untuk dokumentasinya bisa teman-teman akses di website-ya webdriver io lalu di menu api menu api kemudian ke menu expect ya Nah di dalam sini kalau teman-teman Scroll teman-teman bisa temuin semua matchers yang tersedia di webdriver Io e mungkin kita mulai dari paling atas dulu eh yang namanya browser matcher di sini ada maters untuk mengasert apakah URL yang kita expect tu beneran ada jadi to have url bisa dipakai untuk ngecek Apakah url-nya beneran yang kita mau seperti itu ada juga yang jenisnya to have title untuk ngassert ini si expect apa sini garis lurus webdriver io ini juga bisa kita assert Lalu ada juga elemen matchers yang berkaitan dengan elemen seperti to Exist untuk ngecek Apakah sebuah elemen itu memang beneran ada atau ada juga yang to have value untuk ngecek Apakah sebuah input memiliki value atau yang paling sering dipakai adalah to have to have text untuk mengecek Apakah sebuah elemen beneran memiliki sebuah teks gitu atau kalau misal mau pakai ini misal ngecek Apakah paragraf ini memiliki kata-kata kata-kata k elso gitu Nah itu kita bisa menggunakan expect string containing ya di dalam to have Tex Contohnya kayak gini to have Tex kemudian dalamnya ada expect string containing dan masukin e string yang harusnya ada pada teks tersebut nah Mari kita coba mungkin kita buat studi kasus aja ya untuk mempelajari maters ini jadi studi kasusnya adalah menggunakan website sa demo dari sws dan ada halaman login kita akan membu posi test dan negative test case dari halaman login dari halaman login ini seperti itu Nah Mari kita coba buat ya Eh pertama kita buat Project webdriver io dulu yang masih fresh ya di sini Saya sudah buat belajar wdio lagi namanya Nah kalau teman-teman belum buat bisa dibuat menggunakan NPM Init eh wdio latest spasi nama Project seperti itu Nah kalau udah silakan jawab pertanyaannya dan EE eh Insyaallah setelah itu akan ada belajar sor akan ada eh folder Project yang sudah dibuat nah lalu kita bisa membuka Project kita jadi CD belajar wdi eh sor saya sudah kebuka ya kita bisa buka di vs Code untuk projectnya dan di dalam sini masih fresh ya jadi masih ada test cas yang dibuat O wdio kita coba hapus-hapusin dulu delete ini juga kita hapus oke udah bersih Oke packagenya belum ada scripnya mungkin saya coba copy dari P yang lain Biasanya teman-teman kalau udah membuat wdio otomatis ada scrip di sini ya kalau misal engak ada scrip e coba ikuti petunjuk hasil dari komen komen pembuatan w ya atau kalau enggak sempat lihat komennya bisa copy dari Project yang sebelumnya sudah pernah dibuat ini saya coba copy [Musik] kode belajar with the io package json nah ini yang kita perluin ini script yang ini kita paste ke project kita Oke udah seperti ini udah hapus-hapusin juga nah sekarang kita mulai untuk set up test untuk sausdemo.com ya kita copy website-nya lalu di dalam SPC kita buat file baru karena kita mau mengetes halaman login berarti kita buatnya login.p.js di dalam sini kita import tig tiga function dari webdriver io ada browser ada dolar ada dari @wdio/globals lalu kita buat describe-nya Describe mungkin namanya fitur fitur login koma function lalu di dalamnya ada it ya it yang pertama login dengan username dan password yang benar itu asing function yang pertama yang perlu kita lakukan adalah membuka url-nya jadi kita ketik await browserurlung masuk ke url e halaman login dari saus demo selanjutnya kita mau mengisi username dan password dengan E kredensial atau username yang benar gitu di sini yang benarnya adalah standar user lalu kalau kita coba dulu deh standard user Secret saus dan kita coba login Maka hasilnya akan seperti ini ya oke e Sekarang saya mau melakukan hal yang sama pada automation testing kita jadi kita cari dulu usernameennya ini inputnya pakai ID apa Oke ID username berarti a dolar ung pager user Min name titik karena dia input kita bisa menggunakan set value ya set value value yang benar adalah standar user he kemudian kita lakukan hal yang sama untuk password password id-nya Apa id-nya password ID password set value password yang benar adalah Secret Secret sa seperti itu lalu kemudian kita tekan tombol loginnya nah tombol login ini memiliki ID Login button ya kalau kita lihat login Min button berarti a login Min button kita kita klik seper itu nahangbi se kode untuk login otomatisnya kemudian Nah setelah login bagaimana kita menentukan bahwa Oh usernya ini berhasil login loh Nah di situ kita membutuhkan dari dari webdriver i untuk menentukan apakah dia berhasil login atau enggak kalau kita coba dulu jadi ini saya Tana dulu ya brower 2000 mungkin save dan kita coba jalankan atau jangan di sini di sini aja NPM Run wdio ya untuk menjalankan scrip tes kita Uh oke sudah berhasil login enggak kelihatan malah ngetiknya nah e kalau udah berhasil login Mungkin kita bisa e mengassert beberapa hal ya untuk menentukan bahwa kita beneran berhasil login atau enggak pertama dari url-nya kalau berhasil login maka dia url-nya berubah menjadi inventory HTML Oke kita bisa assert ini menggunakan apa menggunakan browser matchers meodnya to have url caranya adalah browsernya yang dimasukin ke lalu to url dan kita masukkan url-nya kita coba expect jnya diambil dari WD Global masukkan OB browsernya lalu tambahkan to have url pe urlnya gitu saya jadi saya eksektasinya kalau kita berhasil login maka kita akan diarahkan ke halaman inventory nah itu yang pertama yang bisa kita pakai Lalu ada apa lagi sih ini nih ada kata produ ya Jadi kalau udah berhasil loginnya Oh sebelnya harus pakai await juga ya saya lupa jadi selalu Awali kodenya dengan await itu aja Oke kita expect si produk ini eh halaman ini memiliki kata produk kita coba lihat produk ini memiliki identifier apa sih Oke Dia memiliki kelas titel tapi yang lebih jelas lagi lebih spesifik itu data test Ya dia memiliki data test title Oke kita pakai konstanta inventory page title sama dengan await dolar dia merupakan span berarti saya bisa ngetik span yang memiliki data tes title nah lalu saya expect juga a expect inventory P title itu dia ada jadi to selain saya juga EXP inventorynya itu untuk Dia memiliki t namanya produ ya jadi prod ini harusnyaory kalian Hapus juga ya Jadi kalau tu havetag Berarti kita ekspektasinya ya dia harus ada dong gitu Oke jadies ini bisa dihapus Cukup dua ini kayaknya kayaknya udah mencukupi jadi to have url dan to have text product kita coba save dan kita coba jalankan Oke sudah jalan dan kita lihat woh berhasil tuh hasilnya adalah centang login dengan username dan password yang benar sudah kecentang Oh ya Kalau teman-teman mungkin merasa terganggu dengan ini dengan log dari infoinfo-info ini Em metode lognya bisa diubah jadi di wdio config di bagian bagian bagian nah ini lck level ada ada banyak ya yang paling tinggi itu adalah TR lalu debug info warning dan Error E kalau mau ketika error aja dan dia keluar locknya pakai error ya berarti errornya kita ganti di sini lock level menjadi error save dan coba kita jalankan lagi harusnya lognya enggak sebanyak yang tadi lihat dia running buka login login pause diikit lalu keluar nah lebih bersih ya di sini kita menjalankan komennya dan lihat engak terlalu banyak e lognya oke udah berhasil nah tapi jangan ini dulu jangan langsung percaya dengan expectnya kita Apakah ininya benar kalau bisa coba sengaja disalahinnya misal htmlnya saya kurangin e l-nya kalau dia masih Mas Benar berarti eknya kita ini enggak berfungsi kita coba save dan kita coba jalankan Heeh Oke kayaknya mulai rusak nih sip nah dia gagal ya Kenapa karena expected-nya adalah eh HTM sedangkan yang kita dapat ada l-nya gitu HTM l dia berbeda nah seperti itu ya Jadi untuk expectek-nya kita udah berhasil mature-nya udah berfungsi ehoke eh lanjut itu untuk yang apa namanya untuk positifnya ya Nah sekarang kita buat yang negatifnya yang sengaja salah gitu Nah yang browser paus-nya ini bisa kita hilangin ya Jadi untuk dibugging aja Nah sekarang kita masuk ke it yang kedua it login dengan dengan us nameame yang benar tapi password yang yang salah seperti itu ya Nah kalau kalau kita lihat hasilnya Nanti Jika username-nya benar tapi passwordnya salah misal username-nya benar passwordnya saya random aja ya nah kalau saya klik login maka akan ada pesan error Epic set username and password do not match any user in this serv nah seperti ini yang terjadi kalau misal passwordnya salah nah Mari kita coba function jangan lupa pakai asing ya asing function kemudian await browser.url jadi kita buka halamannya dulu copy aja yang udah ada seperti itu lalu ini juga kita copy aja daripada ke lama ngetik Jadi username-nya kita ketik passwordnya juga kita ketik tapi kita sengaja salah gitu passwordnya lalu login button-nya kita kita klik ekspektasinya ketika login button ini diklik pesan error ini muncul makanya kita perlu mengexpect pesan error ini kita coba lihat apa ininya Oke isinya adalah data test error dan Sebenarnya ada button di sini ya Ada button untuk menghilangkan test error ini tapi dia juga memiliki sebuah kata-kata Epic username and password not match nah misal Saya mau mengassert sebagian aja gitu dari kata-kata ini engak semua cuma dari kata kata username sampai password not match Saya rasa udah cukup ya gak usah sampai Epic set-nya aja epic-nya juga G ini saya bisa copy dan jangan lupa nama errornya itu H3 yang memiliki data test error berarti kita ambil eh konstanta error message isinya adalah a doar H3 yang memiliki data test sama error ya Kalau enggak salah ya Iya benar Oke kalau elemennya sudahah didapat kita expect a error mennya mem seperti ini tapi karena saya cuma mau Memberikan sebagian teksnya aja saya harus menambahkan menambahkan eod baru lagi namanya itu titiking containing jadi di dalam parameternya have kita tambahkan string coning yang isinya adalah sebagian dari string yang mau kita kita cocokkan seperti itu Nah kita save lalu kita coba jalankan npmrun wdo Nah jadi yang pertama dia akan ngetes yang positifnya dulu lalu ngetes yang negatif dan dua-duanya benar ya Nah kurang lebih seperti itu eh cara untuk menggunakan expect dan matchure dari webdriver io di sini kita udah belajar to have url ada to have text dan ada to have text yang jenisnya sebagian teksnya aja yang mau kita cocokin gitu menggunakan expect string containing Nah untuk lebih lanjutnya teman-teman bisa lihat sendiri pada dokumentasi webdriver io di bagian api bagian expect dan lihat diignbnya ada banyak banget matcher yang bisa kalian coba-coba seperti itu sesuaikan dengan kebutuhan kalian Oke mungkin itu aja untuk video kali ini sampai ketemu pada video berikutnya [Musik]
